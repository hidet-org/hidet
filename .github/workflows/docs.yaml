name: Deploy Docs

on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  docs:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    runs-on: [self-hosted, Linux, X64, gpu]
    container:
      image: nvidia/cuda:11.8.0-devel-ubuntu20.04
      options: --gpus all
    steps:
      - name: Install dependencies via apt
        run: |
          apt update && DEBIAN_FRONTEND=noninteractive apt install -y ccache git graphviz

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.19.x'

      - name: Install dependencies via pip
        run: |
          python -m pip install --upgrade pip
          pip install --pre torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/cu116
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Build hidet
        run: |
          bash scripts/build_wheel.sh
          WHEEL=$(find ./scripts/ -maxdepth 1 -name '*.whl')
          echo "WHEEL_NAME=$WHEEL" >> $GITHUB_ENV
          echo "Built wheel: ${{ env.WHEEL_NAME }}"

      - name: Install hidet
        run: |
          pip install --no-deps --force-reinstall ${{ env.WHEEL_NAME }}


      # Build the docs

      - name: Install docs dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Clear hidet operator cache   # clear hidet op cache when this event is triggered manually
        run: |
          cd docs; python source/clear-hidet-cache.py;
        if: ${{ github.event_name == 'workflow_dispatch' }}

      - name: Build docs
        run: |
          cd docs; make clean; make html

      - name: Upload docs
        uses: up9cloud/action-rsync@master
        env:
          VERBOSE: true
          ARGS: -avzh
          SOURCE: docs/build/html
          HOST: ${{ secrets.DOCS_HOST }}
          KEY: ${{ secrets.DOCS_DEPLOY_SSH_KEY }}
          USER: ${{ secrets.DOCS_DEPLOY_USER }}
          TARGET: ${{ secrets.DOCS_TARGET }}
