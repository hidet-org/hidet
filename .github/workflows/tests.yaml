name: Tests

on:
  push:
    branches: [main]

  pull_request:

jobs:
  Build:
    runs-on: [self-hosted, Linux, X64, gpu]
    container:
      image: nvidia/cuda:11.8.0-devel-ubuntu20.04
      options: --gpus all
    defaults:
      run:
        working-directory: ./build-job
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.19.x'
      - name: Setup ccache
        run: |
          apt update && apt install -y ccache
      - name: Build hidet
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          bash scripts/build_wheel.sh
          WHEEL=$(find ./scripts/ -maxdepth 1 -name '*.whl')
          echo "WHEEL_NAME=$WHEEL" >> $GITHUB_ENV
          echo "WHEEL_NAME=$WHEEL" >> $GITHUB_OUTPUT  # used by the subsequent jobs
          echo "Built wheel: ${{ env.WHEEL_NAME }}"
      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: hidet-wheel
          path: ${{ env.WHEEL_NAME }}
  Test:
    needs: Build
    runs-on: [self-hosted, Linux, X64, gpu]
    defaults:
      run:  # avoid overlapping with the previous job
        working-directory: ./test-job
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Download wheel
        uses: actions/download-artifact@v2
        with:
          name: hidet-wheel
          path: ./scripts

      - name: Install hidet
        run: |
          pip install --no-deps --force-reinstall ${{ steps.Build.outputs.WHEEL_NAME }} 

      - name: Diff against main
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            include/**/*.h
            src/**/*
            python/hidet/backend/**/*.py
            python/hidet/transforms/**/*.py
            python/hidet/ir/**/*.py

      - name: Run full tests (clear operator cache)
        run: |
          python -m pytest -v --clear-cache ./tests
        if: env.GIT_DIFF

      - name: Run fast tests (keep operator cache)
        run: |
          python -m pytest -v ./tests
        if: "!env.GIT_DIFF"

  Docs:
    needs: Build
    runs-on: [self-hosted, Linux, X64, gpu]
    defaults:
      run:
        working-directory: ./docs-job
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r docs/requirements.txt

      - name: Download wheel
        uses: actions/download-artifact@v2
        with:
          name: hidet-wheel
          path: ./scripts

      - name: Install hidet
        run: |
          pip install --no-deps --force-reinstall ${{ steps.Build.outputs.WHEEL_NAME }}

      - name: Build docs
        run: |
          cd docs; make clean; make html

      - name: Upload docs
        uses: up9cloud/action-rsync@master
        env:
          HOST: ${{ secrets.DOCS_HOST }}
          KEY: ${{ secrets.DOCS_DEPLOY_SSH_KEY }}
          TARGET: ${{ secrets.DOCS_TARGET }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
