name: Tests

permissions:
  contents: read

on:
  push:
    branches: 
      - "pull-request/[0-9]*"
  workflow_dispatch:
    inputs:
      gpu_l4:
        description: Run Tests on L4 GPU
        type: boolean
        required: false
        default: false
      gpu_h100:
        description: Run Tests on H100 GPU
        type: boolean
        required: false
        default: false
      gpu_a10:
        description: Run Tests on A10 GPU
        type: boolean
        required: false
        default: false
      gpu_a100:
        description: Run Tests on A100-80 GPU
        type: boolean
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  set_gpu_types:
    runs-on: ubuntu-latest
    outputs:
      gpu_l4: ${{ steps.set_gpu_types.outputs.gpu_l4 }}
      gpu_h100: ${{ steps.set_gpu_types.outputs.gpu_h100 }}
      gpu_a10: ${{ steps.set_gpu_types.outputs.gpu_a10 }}
      gpu_a100: ${{ steps.set_gpu_types.outputs.gpu_a100 }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'
      - name: Set GPU Types Based on Trigger
        id: set_gpu_types
        env:
          INPUT_GPU_L4: ${{ github.event.inputs.gpu_l4 }}
          INPUT_GPU_H100: ${{ github.event.inputs.gpu_h100 }}
          INPUT_GPU_A10: ${{ github.event.inputs.gpu_a10 }}
          INPUT_GPU_A100: ${{ github.event.inputs.gpu_a100 }}
        run: |
          bash .github/scripts/set_gpu_types.sh

  build-docs-l4:
    if: ${{ needs.set_gpu_types.outputs.gpu_l4 == 'true' }}
    name: build-docs (l4)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-l4
      cancel-in-progress: true
    needs: [set_gpu_types]
    timeout-minutes: 120
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
        - name: Install git for checkout
          run: |
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y git
        - name: Checkout source
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            fetch-tags: 'true'

        - name: Install Hidet
          uses: ./.github/actions/install-hidet

        - name: Build docs
          id: build_step
          uses: ./.github/actions/build-docs

  build-docs-h100:
    if: ${{ needs.set_gpu_types.outputs.gpu_h100 == 'true' }}
    name: build-docs (h100)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-h100
      cancel-in-progress: true
    needs: [set_gpu_types]
    timeout-minutes: 120
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Install git for checkout
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Install Hidet
        uses: ./.github/actions/install-hidet

      - name: Build docs
        id: build_step
        uses: ./.github/actions/build-docs

  build-docs-a10:
    if: ${{ needs.set_gpu_types.outputs.gpu_a10 == 'true' }}
    name: build-docs (a10)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-a10
      cancel-in-progress: true
    needs: [set_gpu_types]
    timeout-minutes: 120
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Install git for checkout
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Install Hidet
        uses: ./.github/actions/install-hidet

      - name: Build docs
        id: build_step
        uses: ./.github/actions/build-docs

  build-docs-a100:
    if: ${{ needs.set_gpu_types.outputs.gpu_a100 == 'true' }}
    name: build-docs (a100)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-a100
      cancel-in-progress: true
    needs: [set_gpu_types]
    timeout-minutes: 120
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Install git for checkout
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Install Hidet
        uses: ./.github/actions/install-hidet

      - name: Build docs
        id: build_step
        uses: ./.github/actions/build-docs

  list-test-dirs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Hidet
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - id: set-matrix
        run: |
          python .github/scripts/set_test_matrix.py

  run-test-l4:
    if: ${{ needs.set_gpu_types.outputs.gpu_l4 == 'true' }}
    name: ${{ matrix.path }} (l4)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ matrix.path }}-l4
      cancel-in-progress: true
    needs: [list-test-dirs, set_gpu_types]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.list-test-dirs.outputs.matrix) }}
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Install git for checkout
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Install Hidet
        uses: ./.github/actions/install-hidet

      - name: Run Tests
        id: run_tests_l4
        uses: ./.github/actions/run-tests
        with:
          path: ${{ matrix.path }}

  run-test-h100:
    if: ${{ needs.set_gpu_types.outputs.gpu_h100 == 'true' }}
    name: ${{ matrix.path }} (h100)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ matrix.path }}-h100
      cancel-in-progress: true
    needs: [list-test-dirs, set_gpu_types]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.list-test-dirs.outputs.matrix) }}
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Install git for checkout
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Install Hidet
        uses: ./.github/actions/install-hidet

      - name: Run Tests
        id: run_tests_h100
        uses: ./.github/actions/run-tests
        with:
          path: ${{ matrix.path }}

  run-test-a100:
    if: ${{ needs.set_gpu_types.outputs.gpu_a100 == 'true' }}
    name: ${{ matrix.path }} (a100-80)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ matrix.path }}-a100-80
      cancel-in-progress: true
    needs: [list-test-dirs, set_gpu_types]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.list-test-dirs.outputs.matrix) }}
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Install git for checkout
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Install Hidet
        uses: ./.github/actions/install-hidet

      - name: Run Tests
        id: run_tests_a100
        uses: ./.github/actions/run-tests
        with:
          path: ${{ matrix.path }}

  run-test-a10:
    if: ${{ needs.set_gpu_types.outputs.gpu_a10 == 'true' }}
    name: ${{ matrix.path }} (a10)
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ matrix.path }}-a10
      cancel-in-progress: true
    needs: [list-test-dirs, set_gpu_types]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.list-test-dirs.outputs.matrix) }}
    runs-on: linux-amd64-gpu-l4-latest-1
    container:
      image: nvidia/cuda:12.8.1-devel-ubuntu22.04
      options: --gpus all
    steps:
      - name: Install git for checkout
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'
      - name: Run Tests
        id: run_tests_a10
        uses: ./.github/actions/run-tests
        with:
          path: ${{ matrix.path }}

  run-test-amdgpu:
    if: |
      (github.event.pull_request &&
      (contains(github.event.pull_request.body, '$ hidet-ci amdgpu') ||
      contains(github.event.pull_request.comments.*.body, '$ hidet-ci amdgpu')))
    runs-on:
      # on self-hosted runner
      [self-hosted, rocm]
    container:
      # see https://rocm.docs.amd.com/projects/install-on-linux/en/latest/how-to/docker.html#docker-access-gpus-in-container
      # for running AMD GPU applications in Docker containers
      image: rocm/dev-ubuntu-22.04
      options: --device /dev/kfd --device /dev/dri --security-opt seccomp=unconfined
    steps:
      - name: Install dependencies via apt
        run: |
          apt update && DEBIAN_FRONTEND=noninteractive apt install -y ccache git graphviz graphviz-dev

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Hidet
        run: |
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.2
          pip install .

      - name: List installed packages
        run: |
          pip list

      - name: Run tests
        run: |
          rm -rf ~/.config/hidet
          python -m pytest -v --durations=20 --clear-cache tests

  final-status-indicator:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Pass All Functional Tests
    needs: [run-test-l4, run-test-amdgpu, set_gpu_types]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
